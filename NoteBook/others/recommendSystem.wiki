%title 推荐系统
== 推荐系统 ==

=== 推荐系统分类 ===
推荐系统的分类可以按照系统发掘的数据：
- 协同过滤算法(collaborative filtering(CF)):使用社区的评价行为
- 基于内容的推荐算法(conetent-based filtering(CB)):处理内容数据
- matrix factorization(MF)
- 基于知识的推荐算法:利用推荐领域的可用知识
- 基于网络结构的推荐算法
- 混合推荐系统

=== 推荐算法的优缺点分析 ===

- 基于内容的推荐
    - 在基于内容的推荐方法中，自动化的特征提取方法很难应用于多媒体数据
    - 推荐的物品也是一定是与之前用户选择的物品相似，所以多样性很难保证
	- 对于没有选择任何物品的新用户无法进行推荐
- 协同过滤
    - 克服了基于内容的方法的自动化程度低、推荐结果不丰富的弊端
    - 但是由于要基于大量数据集，所以存在稀疏性问题和冷启动问题
- 基于知识的推荐
    - 静态的推荐方式，不存在冷启动和稀疏性问题
    - 但是知识难以建模
- 混合推荐方式
	- 由于组合方式不同，性能和特点差异大

| 推荐算法       | 优点                                                                                                                                         | 缺点                                                                                    |
|----------------|----------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|
| 基于内容的推荐 | 推荐结果直观，易于解释；<br>无需用户访问的历史数据；<br>没有新物品和稀疏性问题；<br>被分类学习等机器学习技术所支持；                         | 被特征提取方法所限制；<br>新用户问题；<br>训练分类器需要大量数据；<br>可扩展性差；      |
| 协同过滤       | 不需要专业知识；<br>随着用户数量的提升，性能会改善；<br>自动化；<br>易于寻找用户的新兴趣点；<br>如音乐视频等复杂非结构化媒体也可以被处理 | 稀疏性问题；<br> 可扩展性差；<br>新用户和新物品问题；<br>推荐质量受限于历史数据质量 |
| 基于知识的推荐 | 可以将用户需求映射到物品上；<br>非产品的特征也可以被考虑                                                                                     | 知识难以获得或建模；<br> 静态方法不灵活                                                 |


=== 推荐系统评价 ===
- 用户满意度: 可以根据购买率，用户停留时间，转户率衡量用户满意度
- 预测准确度:
    - 评分预测：通常依据均方根误差(RMSE)和平均绝对误差(MAE)计算
	- TopN推荐：通过准确率或召回率度量
- 覆盖率：推荐的物品是否能覆盖大部分商品，体现系统挖掘长尾的能力
- 多样性

=== 推荐系统研究热点 ===
# 引入更加精确使用的用户和对象特征
    - 协同过滤算法并没有使用用户和对象的特征，如关键词和用户人口统计学特征等
# 多维度的推荐
    - 不仅仅是研究用户-物品二元组，还考虑环境因素
# 协同过滤的安全问题
# 相关反馈研究与侵袭问题
# 推荐算法的评价准则
# 复杂网络理论及图方法推荐系统
# 社会化和推荐逻辑空间的巴尔干化现象
# 把内容分析结合到基于网络的推荐算法中的混合推荐，如标签与关键词之间的关联与基于网络的推荐算法的结合

==== 针对多种物品的推荐 ====
Switching Hybrid Recommendation model:: 每个推荐引擎负责推荐一种东西，根据输入物品类型，选择利用那种引擎进行推荐

==== Filter Bubbles ====
由于推荐系统，导致用户被自己所感兴趣，或熟知的领域所禁锢，无法获取新的领域。

=== 协同过滤算法的问题 ===
# 用户和产品的数据的稀疏性，导致的准确率问题
# 算法的可伸缩性，对应于用户和物品的高速增长
# 协同过滤算法的评估问题

==== 协同过滤计算 ====
- 可以事先计算好用户的相似度，定期计算更新
- 只利用相似度最高的N个物品来计算用户

=== 混合推荐系统 ===
内部Merge经典算法:: 由于使用到了具体算法的特征，所以不易与进行扩展(最常见的是协同过滤与基于内容的推荐的混合系统)
将单个算法作为黑盒，为结果增加权重组合:: 方便扩展，对于每一个用户来说，权重都相同
根据不同情况，动态选择组合算法:: 组合算法预先设定好，而非动态生成。
动态生成组合权重1:: 根据推荐系统的预测准确率去调整系统混合参数（定义一个准确率预测者，根据该预测值，动态调整各种权重）
动态生成组合权重2:: 根据用户的反馈，动态调整权重

==== 混合推荐系统动态混合策略的意义 ====

动态生成组合权重的思想基于 *每个用户都是不一样的，根据每个用户的特点提供个性化的推荐组合方式应该会更好* 

# 预测的领域是动态变化的
# 用户的兴趣会随着与接触领域的交互而变化
# 每个用户不同，不应该使用同一个混合算法为所有用户推荐

*所以*  
- 基于预测结果表现（预测准确率）反馈，调整混合策略
 
*方案一*:
整体混合算法就是一个决策树，C4.6,BF-Tree,Conjunctive Rules classifier algorithms
# 利用算法状态和用户反馈形成门限值
# 根据这些门限值，不断的判定，系统要使用的算法
# 自适应学习模块，主要用于分析，调整这些算法状态与用户反馈形成的门限值

电影领域评分所采用的特征
# 当前物品所有的评分记录数
# 对当前物品已经进行过评价的相似用户的数量
# 根据相似度测量方法，相似物品的数量
# 当前物品在用户物品中所属的主要兴趣类别
# 当前物品在用户物品中所属的子兴趣类别

----

== 论文初步思路 ==
有没有可能通过分析用户评分数据的多少去发现物品的流行度，因为可能评分数据较少的用户更倾向于对流行物品评分

其实关键就是通过分析数据的全局性，和局部性，改善推荐结果，对推荐结果个性化

用户的选择影响因素：
# 用户长期喜好，也就是个性化偏好（局部性）
# 流行因素影响，也就是短期偏好（全局性）
# 上下文环境，用户做出选择时，时间，心情，地点等等因素（动态因子）

所以针对这三个影响因素，选择并适当片面化算法，以特别针对其中的一方面因素，通过三个这样的特别针对的算法，形成三个特别针对的推荐结果，根据用户动反馈，动态调整三方面算法的混合权重，形成针对每一个用户的个性化推荐。

通过mapreduce化混合推荐引擎，增加推荐系统对大数据的可扩展性。
