%title 用户兴趣建模  
= 用户兴趣建模 =
== 基于关键词的向量模型 ==
- 输入是文档列表$D={d_1,d_2,\dots,d_n}$
- 输出是一个带权重的关键词向量$T={<t_1,w_1>,<t_2,w_2>,\dots,<t_n,w_n>}$
其中$t_i$为关键词，$w_i$为该关键词的权重。

*流程*
# 用户访问过的文档作为训练集，经过预处理，提取出关键词
# 根据TF-IDF计算权重，并得到带权重的关键词兴趣向量（基于TF-IDF文档聚类）
# 待分析文档也通过类似方式得到加权关键词向量
# 对其与用户兴趣向量计算余弦相似度
# 相似度大的即为用户感兴趣的文档

*缺点*
# 仅仅利用了关键词本身的信息，而没有考虑词语的语义信息；
# 将各个关键词当做是彼此独立的，没有能够表征原始数据中事实上存在的一种潜在的语义关联；
# 这样得到的模型维度过于分散。

== 基于本体概念的树模型 ==
本体（ontology）是对概念和概念之间关系的一张描述，它为词语使用、共享，知识重用定义了概念上的定义。
本体被用来减轻不同系统之间进行交互时，对于同一个概念而使用了不同的词语而带来的不便。

本体的表达形式多为概念的树形层次结构。

== 基于聚类算法的兴趣建模 ==
层次聚类算法大体分为，凝聚式（Agglomerative）和分列式（Divisive）

关键词聚类

概念聚类

== 基于检索分类的兴趣建模 ==
