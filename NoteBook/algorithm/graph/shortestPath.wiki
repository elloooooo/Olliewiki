= 单源最短路径 =
    - 负权重边
    - 环路
	- 松弛操作
== Bellman-Ford算法 ==
可能含有可以从源点到达的权重为负值的环路，如果那样，则单源最短路径无意义
=== 思路 ===
对有向图G=(V,E)，对其进行v-1次的处理，每一次处理对G.E中所有边进行松弛操作。

检查有向图中是否存在一个可以从源点到达的权重为负值的环路，无则返回true，有则返回false
== 有向无环图的单源最短路径 ==
因为无环，所以即便有负权重的边，单源最短路径始终存在
=== 思路 ===
利用深度优先搜索，对图进行拓扑排序，依照拓扑排序顺序，逐次对每一个节点发出的边进行松弛操作。

== Dijkstra算法 ==
要求所有边的权重都为非负值
=== 思路 ===
维护一个节点集S，从源点s到S中的节点的最短距离都已找到

算法不断从集合V-S中取得最短路径估计值最小的节点u加入S，并对u发出的节点做松弛操作
== 差分约束和最短路径 ==
暂未关注
