= Latex-Suite =
决定用VIM加LatexSuite写论文……
安装配置什么的，以后再写吧！网上教程一堆……

先写一个我今天解决的问题

安装完LatexSuite就可以使用如下快捷键


| 按键  | 功能      | 配置 |
|-------|-----------|------|
| `\ll` | 编译      |      |
| `\lv` | 预览      |      |
| `\ls` | 反向查找? |      |

=== 一键编译设置`\ll` ===
==== 编译逻辑 ====
设置了Tex_MultipleCompile之后，应该`\ll`之后就可以连带参考文献一起生成，文档如是说：

    # If there was a .idx file, then remember its contents.
    # Run latex.
    # If the .idx file changed due to the latex compiler, then run makeindex to redo the .ind file and then remember to rerun latex.
    # If the .aux file generated by the latex compiler contains a \bibdata line, then it means that we are using a .bib file. Therefore, run bibtex.
        - NOTE: This means that we will always run bibtex whenever we use the \bibliography command whether or not we actually need to. At this time, Latex-Suite does not parse the .aux file before and after the latex compiler to see if we are required to rerun bibtex.
    # If the .bbl file changes because of this, then remember to rerun latex again.
    # Also, we check to see if the LaTeX compiler gives certain standard warnings which notify that we need to compile once again. In this case also, remember to rerun LaTeX.
    # If we found we had to rerun latex, then we repeat the steps above but not running makeindex or bibtex again.`
	   
*其中表示，如果第一次Latex编译之后生成的`.aux`文件中，包含`\bibdata`这样的行，就会调用bibtex重新编译，生成`.bbl`文件，然后再Latex编译，最终生成完整的文档*

==== 问题描述 ====
但是实际操作中，发现，代码执行逻辑是先创建临时文件，并将`.aux`文件载入到临时文件中，然后搜索\bibdata字符，如果有，则进入Bibtex编译阶段。

然而产生临时文件的地方就是 `$TEMP` 变量所定义的地方； 利用`tempname()`函数获得,
而它要调用的`.aux`文件并不在`$TEMP`所定义的目录中，从而无法获得该文件的内容，最终导致无法执行bibtex编译过程。 

==== 解决方法： ====
    - 文件：`\Vim\vimfiles\ftplugin\latex-suite\multicompile.vim`
    - 函数：`Tex_GotoTempFile()`
    - 将利用`tempname()`函数获得临时文件路径的一句改掉，直接命名为`bib.tmp`，这样省略路径的话，临时文件就会创建在当前工作目录，而且这个临时文件在使用完之后也会删除！

=== 查看编译结果`\lv` ===
调用第三方放软件查看编译结果

将要用来查看pdf文档的软件的执行文件设入环境变量，使其可在cmd命令行中开启

