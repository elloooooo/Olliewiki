= Log4j =
== Log4J layout配置 ==
=== 配置日志信息的格式 ===
==== layout类型 ====
- org.apache.log4j.HTMLLayout （以HTML 表格形式布局），
	- HTMLLayout 选项 
		- LocationInfo=true: 默认值是false, 输出java 文件名称和行号
        - Title=my app file: 默认值是 Log4J Log Messages.
- org.apache.log4j.PatternLayout （可以灵活地指定布局模式），
	-  PatternLayout 选项
        - ConversionPattern=%m%n : 指定怎样格式化指定的消息。
- org.apache.log4j.SimpleLayout （包含日志信息的级别和信息字符串），
- org.apache.log4j.TTCCLayout （包含日志产生的时间、线程、类别等等信息）
        - XMLLayout  选项
        	- LocationInfo=true: 默认值是false, 输出java 文件和行号

==== Pattern配置 ====
例如：`log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n`

这里需要说明的就是日志信息格式中几个符号所代表的含义：
- －X 号: X 信息输出时左对齐；
- %p: 输出日志信息优先级，即DEBUG ，INFO ，WARN ，ERROR ，FATAL,
- %d: 输出日志时间点的日期或时间，默认格式为ISO8601 ，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS} ，输出类似：2002 年10 月18 日 22 ：10 ：28 ，921
- %r: 输出自应用启动到输出该log 信息耗费的毫秒数
- %c: 输出日志信息所属的类目，通常就是所在类的全名
- %t: 输出产生该日志事件的线程名
- %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L) 的组合, 包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
- %x: 输出和当前线程相关联的NDC( 嵌套诊断环境), 尤其用到像java servlets 这样的多客户多线程的应用中。
- %%: 输出一个"%" 字符
- %F: 输出日志消息产生时所在的文件名称
- %L: 输出代码中的行号
- %m: 输出代码中指定的消息, 产生的日志具体信息
- %n: 输出一个回车换行符，Windows 平台为"/r/n" ，Unix 平台为"/n" 输出日志信息换行
- 可以在% 与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：
	- 1)%20c ：指定输出category 的名称，最小的宽度是20 ，如果category 的名称小于20 的话，默认的情况下右对齐。
	- 2)%-20c: 指定输出category 的名称，最小的宽度是20 ，如果category 的名称小于20 的话，"-" 号指定左对齐。
	- 3)%.30c: 指定输出category 的名称，最大的宽度是30 ，如果category 的名称大于30 的话，就会将左边多出的字符截掉，但小于30 的话也不会有空格。
	- 4)%20.30c: 如果category 的名称小于20 就补空格，并且右对齐，如果其名称长于30 字符，就从左边交远销出的字符截掉。

